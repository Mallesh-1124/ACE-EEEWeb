name: Django CI

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  get-python-versions:
    runs-on: ubuntu-latest
    outputs:
      matrix: ${{ steps.set-matrix.outputs.matrix }}
    steps:
      - name: Fetch available Python versions
        run: |
          curl -s https://raw.githubusercontent.com/actions/python-versions/main/versions-manifest.json \
          | jq -r '.[].version' > versions.txt
          echo "Available Python versions:"
          cat versions.txt

      - name: Filter supported Python versions for Django
        id: set-matrix
        run: |
          # Match Django-supported versions (3.8â€“3.12) and keep unique major.minor
          VERSIONS=$(grep -E '^3\.(8|9|10|11|12)\.' versions.txt \
            | cut -d. -f1,2 \
            | sort -uV \
            | jq -R -s -c 'split("\n")[:-1]')
          echo "Filtered matrix: $VERSIONS"
          echo "matrix=$VERSIONS" >> $GITHUB_OUTPUT

  build:
    needs: get-python-versions
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        python-version: ${{ fromJson(needs.get-python-versions.outputs.matrix) }}

    steps:
      - uses: actions/checkout@v4

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install Dependencies
        run: |
          python -m pip install --upgrade pip
          if [[ "${{ matrix.python-version }}" < "3.10" ]]; then
            pip install "Django>=4.2,<5.0"
          else
            pip install "Django>=5.0,<6.0"
          fi
            pip install -r requirements.txt
      - name: Run Tests
        run: python manage.py test
